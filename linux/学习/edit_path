　　1.#PATH=$PATH:/etc/apache/bin

　　使用这种方法,每当登出PATH就会恢复

　　2.#vi /etc/profile

　　在适当位置添加PATH=$PATH:/etc/apache/bin

　　这种方法最好,除非你强制手动修改PATH的值,否则将不会被改变

　　3.#vi ~/.bash_profile

　　修改PATH行,把/etc/apache/bin添加进去

　　这种方法是针对用户起作用的

方法1：
让/etc/profile文件修改后立即生效 ,可以使用如下命令:
# .  /etc/profile
注意: . 和 /etc/profile 有空格
方法2：
让/etc/profile文件修改后立即生效 ,可以使用如下命令:
# source /etc/profile

source命令：
source命令也称为“点命令”，也就是一个点符号（.）。source命令通常用于重新执行刚修改的初始化文件，使之立即生效，而不必注销并重新登录。
用法： 
source filename 或 . filename
source命令除了上述的用途之外，还有一个另外一个用途。在对编译系统核心时常常需要输入一长串的命令，如：
make mrproper
make menuconfig
make dep
make clean
make bzImage
…………
如果把这些命令做成一个文件，让它自动顺序执行，对于需要多次反复编译系统核心的用户来说会很方便，而用source命令就可以做到这一点，它的作用就是把一个文件的内容当成shell来执行，先在linux的源代码目录下（如/usr/src/linux-2.4.20）建立一个文件，如make_command，在其中输入一下内容：
make mrproper &&
make menuconfig &&
make dep &&
make clean &&
make bzImage &&
make modules &&
make modules_install &&
cp arch/i386/boot/bzImage /boot/vmlinuz_new &&
cp System.map /boot &&
vi /etc/lilo.conf &&
lilo -v
文件建立好之后，每次编译核心的时候，只需要在/usr/src/linux-2.4.20下输入：
source make_command
即可，如果你用的不是lilo来引导系统，可以把最后两行去掉，配置自己的引导程序来引导内核。
顺便补充一点，&&命令表示顺序执行由它连接的命令，但是只有它之前的命令成功执行完成了之后才可以继续执行它后面的命令。

mount -t "ntfs" -ro "uhelper=udisks2,nodev,nosuid,uid=1000,gid=1000,dmask=0077,fmask=0177" "/dev/sda5" "/media/zhangwj/D"
mount -t "ntfs" -ro "uhelper=udisks2,nodev,nosuid,uid=1000,gid=1000,dmask=0077,fmask=0177" "/dev/sda6" "/media/zhangwj/E"
mount -t "ntfs" -ro "uhelper=udisks2,nodev,nosuid,uid=1000,gid=1000,dmask=0077,fmask=0177" "/dev/sda6" "/media/zhangwj/3846dbe6-b231-42ee-a046-71a44b3448de"

<exp> ::= (<exp>)|<exp1>|<exp2>
<exp1> ::= <exp>|<digit><oper1><exp>|<ditgit>
<exp2> ::= <exp>|<digit><oper2><exp>|<ditgit>
<oper1> ::= *|%
<oper2> ::= +|-
<ditgit> ::= [0-9]{1,}

1+3*(4-1)-2
<exp>=><exp2>-2=>1+<exp1>-2=>