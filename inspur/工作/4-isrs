isrs是存放工业营销前端资源的组件，按照严格的要求来说，所有的js css都要放到这个组件下（这是一个好的实践，也是一个易维护易扩展的实践）

1、规划

	每个组件src单独一个文件夹
	
	common规划的是所有要引到每个组件的layout中的，用于初始化或者提供基础公共的一些方法

	pub用于提供一些公共的业务组件，按严格要求来说，这里存放的组件都应该是提供一套可用的api，引用后可直接调用的
	
2、注意事项

	ica里存放的都是基础的业务相关的静态资源，不需要特别留意
	
	imr的common引自管控组件scmr的静态资源，有些（大部分）的静态资源并没有用到，但是初始版本因为不懂（懒？）所以全部引入没有判断哪些没用
	进行删除，后续维护人员如果感觉奇怪，可以不必修改，如果有严格的自我要求和代码洁癖，可以在学习了解的基础上进行适当删减
	
	imr开发的功能基本上都使用的xsm-grunt-page-config来进行grunt任务处理的，为了调试方便，建议修改 78行 tmp-->dist 95行去掉 uglify
	这样就不会进行代码压缩，虽然带来一部分带宽的消耗，但是在企业级应用中，这点消耗并没有什么大问题
	
	开发的部分功能是用coffee和backbone组合开发的，如果要维护，需要掌握这两块基础知识，也许后续开发人员自己使用这两个技术自己开发单独的功能
	之后，也能体会到这些技术带来的好处，从而喜欢上他们，并为自己的工作带来效率的提升和感受到技术的乐趣，学习直接进官网，资料很详细
	
3、后期提升
	
	在目前的业务场景下，对前端的要求其实并不会越来越高，如果后续研发中心要推广或者尝试前端框架如vue，angular等，可以在isrs里使用，这些都是
	提升开发效率的东西，值得花时间和精力推广
	
	代码要符合规范，后续重构来说也会降低内耗（less写的都很low，后续开发维护的时候，要稍微提升一下）